<?php

use App\Http\Controllers\API\AWSImageRecognitionController;
use App\Http\Controllers\API\AgencyController;
use App\Http\Controllers\API\AppSettingController;
use App\Http\Controllers\API\AssessmentController;
use App\Http\Controllers\API\AssessmentYearController;
use App\Http\Controllers\API\BloodGroupController;
use App\Http\Controllers\API\BusinessCategoryController;
use App\Http\Controllers\API\BusinessLevelController;
use App\Http\Controllers\API\BusinessSubCategoryController;
use App\Http\Controllers\API\BusinessTypeController;
use App\Http\Controllers\API\ClassificationController;
use App\Http\Controllers\API\CommercialVehicleController;
use App\Http\Controllers\API\CooperateController;
use App\Http\Controllers\API\DemandNoticeCategoryController;
use App\Http\Controllers\API\DemandNoticeCategoryItemController;
use App\Http\Controllers\API\DemandNoticeController;
use App\Http\Controllers\API\DemandNoticeItemController;
use App\Http\Controllers\API\DocumentController;
use App\Http\Controllers\API\DocumentLifeSpanController;
use App\Http\Controllers\API\DocumentTollGateEntryController;
use App\Http\Controllers\API\DocumentTypeController;
use App\Http\Controllers\API\DocumentTypeTollGateController;
use App\Http\Controllers\API\ForgotPasswordController;
use App\Http\Controllers\API\GenoTypeController;
use App\Http\Controllers\API\IncomeRangeController;
use App\Http\Controllers\API\IndividualController;
use App\Http\Controllers\API\LocalGovernmentAreaController;
use App\Http\Controllers\API\LoginController;
use App\Http\Controllers\API\LogoutController;
use App\Http\Controllers\API\LogoutTokenValidationController;
use App\Http\Controllers\API\MaritalStatusController;
use App\Http\Controllers\API\MarketNameController;
use App\Http\Controllers\API\MonifyWebhookController;
use App\Http\Controllers\API\NationalityController;
use App\Http\Controllers\API\OccupationController;
use App\Http\Controllers\API\PaymentController;
use App\Http\Controllers\API\PropertyCategoryController;
use App\Http\Controllers\API\PropertyController;
use App\Http\Controllers\API\PropertyTypeController;
use App\Http\Controllers\API\PropertyUseController;
use App\Http\Controllers\API\RegistrationOptionController;
use App\Http\Controllers\API\ResidentialController;
use App\Http\Controllers\API\RevenueItemController;
use App\Http\Controllers\API\RevenueTypeController;
use App\Http\Controllers\API\SettlementTypeController;
use App\Http\Controllers\API\ShopController;
use App\Http\Controllers\API\SignageController;
use App\Http\Controllers\API\SpouseController;
use App\Http\Controllers\API\StateController;
use App\Http\Controllers\API\TicketAgentCategoryController;
use App\Http\Controllers\API\TicketAgentController;
use App\Http\Controllers\API\TicketAgentStatusController;
use App\Http\Controllers\API\TicketAgentTypeController;
use App\Http\Controllers\API\TicketAgentWalletController;
use App\Http\Controllers\API\TicketBulkVendingController;
use App\Http\Controllers\API\TicketCategoryController;
use App\Http\Controllers\API\TicketEnforcementController;
use App\Http\Controllers\API\TicketVendingController;
use App\Http\Controllers\API\TitleController;
use App\Http\Controllers\API\TollGateCategoryController;
use App\Http\Controllers\API\UserConfirmationController;
use App\Http\Controllers\API\UserController;
use App\Http\Controllers\API\UserFacialBiometricController;
use App\Http\Controllers\API\UserUpdatePasswordController;
use App\Http\Controllers\API\UserVerificationController;
use App\Http\Controllers\API\VehicleCategoryController;
use App\Http\Controllers\API\VehicleEnumerationVerificationController;
use App\Http\Controllers\API\VehicleManufacturerController;
use App\Http\Controllers\API\WalletFundTransferController;
use Illuminate\Support\Facades\Route;

/*
|--------------------------------------------------------------------------
| API Routes
|--------------------------------------------------------------------------
|
| Here is where you can register API routes for your application. These
| routes are loaded by the RouteServiceProvider and all of them will
| be assigned to the "api" middleware group. Make something great!
|
*/


Route::prefix('v1')->group(function () {
    Route::get('token-verification', LogoutTokenValidationController::class);
    Route::post('login', LoginController::class);
    Route::post('logout', LogoutController::class)->middleware('auth:sanctum');
    Route::post('update-password', UserUpdatePasswordController::class)->middleware('auth:sanctum');
    Route::apiResource('app-settings', AppSettingController::class)->middleware('auth:sanctum')->only(['index', 'update']);
    Route::get('assessment-years', AssessmentYearController::class);
    Route::get('business-levels', BusinessLevelController::class);
    Route::get('business-types', BusinessTypeController::class);
    Route::get('business-categories', BusinessCategoryController::class);
    Route::get('business-sub-categories/{business_category_id}', BusinessSubCategoryController::class);
    Route::get('classifications', ClassificationController::class);
    Route::get('states', StateController::class);
    Route::get('registration-options', RegistrationOptionController::class);
    Route::post('user-registration-verification', [UserVerificationController::class, 'initial_registration_request']);
    Route::post('user-phone-number-verification', [UserVerificationController::class, 'user_phone_number_confirmation']);
    Route::patch('user-facial-biometric', UserFacialBiometricController::class);
    Route::apiResource('demand-notice-categories', DemandNoticeCategoryController::class);
    Route::apiResource('demand-notice-categories-item', DemandNoticeCategoryItemController::class)->middleware('auth:sanctum');
    Route::get('local-government-areas/{state_id}', LocalGovernmentAreaController::class);
    Route::get('market-names', MarketNameController::class);
    Route::get('nationalities', NationalityController::class);
    Route::get('occupations', OccupationController::class);
    Route::get('property-categories', PropertyCategoryController::class);
    Route::get('revenue-types', RevenueTypeController::class);
    Route::get('settlement-types', SettlementTypeController::class);
    Route::get('blood-groups', BloodGroupController::class);
    Route::get('income-ranges', IncomeRangeController::class);
    Route::get('geno-types', GenoTypeController::class);
    Route::get('marital-status', MaritalStatusController::class);
    Route::get('titles', TitleController::class);
    Route::apiResource('forgot-password', ForgotPasswordController::class)->only(['store', 'update']);
    Route::apiResource('individuals', IndividualController::class);
    Route::get('individuals-search', [IndividualController::class, 'search']);
    //Route::apiResource('residential-address', ResidentialController::class);
    Route::apiResource('spouse', SpouseController::class);
    Route::apiResource('shops', ShopController::class)->middleware('auth:sanctum');
    Route::get('shops-search', [ShopController::class, 'search'])->middleware('auth:sanctum');
    Route::apiResource('toll-gate-categories', TollGateCategoryController::class)->middleware('auth:sanctum')->only(['index']);
    Route::apiResource('document-type-toll-gates', DocumentTypeTollGateController::class)->middleware('auth:sanctum')->only(['index']);
    Route::apiResource('document-toll-gates-entries', DocumentTollGateEntryController::class)->middleware('auth:sanctum')->only(['index']);
    Route::apiResource('demand-notice-items', DemandNoticeItemController::class)->middleware('auth:sanctum')->only(['index']);
    Route::apiResource('demand-notices', DemandNoticeController::class)->middleware('auth:sanctum')->only(['index', 'store', 'update', 'show']);
    Route::get('demand-notices-by-demand-notice-number/{demand_notice_number}', [DemandNoticeController::class, 'show_by_demand_notice_number'])->middleware('auth:sanctum');
    Route::apiResource('document-types', DocumentTypeController::class)->middleware('auth:sanctum')->only(['index']);
    Route::apiResource('documents', DocumentController::class)->middleware('auth:sanctum')->only(['index']);
    Route::apiResource('document-life-spans', DocumentLifeSpanController::class)->middleware('auth:sanctum')->only(['index']);
    Route::get('shops-by-user-id/{user_id_or_unique_id}', [ShopController::class, 'show_by_user_id'])->middleware('auth:sanctum');
    Route::apiResource('signage', SignageController::class)->middleware('auth:sanctum');
    Route::get('signage-by-user-id/{user_id_or_unique_id}', [SignageController::class, 'show_by_user_id'])->middleware('auth:sanctum');

    Route::apiResource('assessments', AssessmentController::class)->middleware('auth:sanctum')->only(['index', 'store', 'show', 'destroy']);
    Route::get('assessments-search', [AssessmentController::class, 'search'])->middleware('auth:sanctum');
    Route::get('assessments-by-user-id/{user_id_or_unique_id}', [AssessmentController::class, 'show_by_user_id'])->middleware('auth:sanctum');
    Route::get('assessments-by-reference-number/{reference_number}', [AssessmentController::class, 'show_by_reference_number'])->middleware('auth:sanctum');
    Route::get('assessments-by-phone-number/{phone_number}', [AssessmentController::class, 'show_by_phone_number'])->middleware('auth:sanctum');
    Route::post('assessment-entity-validation', [AssessmentController::class, 'validate_assessment_entity_id']);
    Route::post('bulk-assessments-with-id', [AssessmentController::class, 'bulk_assessment_store'])->middleware('auth:sanctum');
    Route::post('bulk-assessments-without-id', [AssessmentController::class, 'bulk_assessment_without_id_store'])->middleware('auth:sanctum');
    Route::get('assessment/{identifier}', [AssessmentController::class, 'indentifier']);
    Route::apiResource('agencies', AgencyController::class)->only(['index', 'show', 'update', 'store'])->middleware('auth:sanctum');
    Route::apiResource('revenue-items', RevenueItemController::class)->only(['index', 'show', 'update', 'store'])->middleware('auth:sanctum');
    Route::get('revenue-items-agency/{agency_id}', [RevenueItemController::class, 'revenue_item_agency'])->middleware('auth:sanctum');
    Route::apiResource('cooperates', CooperateController::class)->middleware('auth:sanctum');
    Route::get('cooperates-search', [CooperateController::class, 'search'])->middleware('auth:sanctum');
    Route::apiResource('commercial-vehicles', CommercialVehicleController::class)->middleware('auth:sanctum');
    Route::get('commercial-vehicles-search', [CommercialVehicleController::class, 'search'])->middleware('auth:sanctum');
    Route::get('commercial-vehicles-by-user-id/{user_id_or_unique_id}', [CommercialVehicleController::class, 'show_by_user_id'])->middleware('auth:sanctum');
    Route::apiResource('properties', PropertyController::class)->middleware('auth:sanctum');
    Route::get('properties-search', [PropertyController::class, 'search'])->middleware('auth:sanctum');
    Route::get('properties-by-user-id/{user_id_or_unique_id}', [PropertyController::class, 'show_by_user_id'])->middleware('auth:sanctum');
    Route::apiResource('property-types', PropertyTypeController::class)->only(['index']);
    Route::apiResource('payments', PaymentController::class)->middleware('auth:sanctum')->only(['index', 'store']);
    Route::get('payments-search', [PaymentController::class, 'search'])->middleware('auth:sanctum');
    Route::post('payments-webhook', [PaymentController::class, 'payment_webhoook_for_wallet']);
    Route::post('payments-isw-generate-reference', [PaymentController::class, 'payment_generate_reference'])->middleware('auth:sanctum');
    Route::get('payments-isw-reference-verification', [PaymentController::class, 'payment_reference_verification'])->middleware('auth:sanctum');
    Route::get('payments-by-user-id/{user_id_or_unique_id}', [PaymentController::class, 'show_by_user_id'])->middleware('auth:sanctum');
    Route::get('payments-by-reference-number/{reference_number}', [PaymentController::class, 'show_by_reference_number'])->middleware('auth:sanctum');
    Route::apiResource('property-uses', PropertyUseController::class)->only(['index']);
    Route::apiResource('users', UserController::class)->middleware('auth:sanctum')->only(['index', 'show']);
    Route::get('user/email-phone-number', [UserController::class, 'email_phone_number'])->middleware('auth:sanctum');
    Route::post('user-verification', [UserController::class, 'user_verification']);
    Route::apiResource('ticket-vending', TicketVendingController::class)->middleware('auth:sanctum')->only(['index', 'store', 'show']);
    Route::get('ticket-vending-search', [TicketVendingController::class, 'search'])->middleware('auth:sanctum');
    Route::get('ticket-vending-statistics', [TicketVendingController::class, 'ticket_statistics'])->middleware('auth:sanctum');
    Route::get('ticket-total-vending-statistics', [TicketVendingController::class, 'ticket_total_statistics'])->middleware('auth:sanctum');
    Route::get('ticket-vending-by-agent-id/{ticket_agent_id}', [TicketVendingController::class, 'tickets_by_agent'])->middleware('auth:sanctum');
    Route::get('ticket-bulk-vending-by-agent-id/{ticket_agent_id}', [TicketBulkVendingController::class, 'tickets_by_agent'])->middleware('auth:sanctum');
    Route::apiResource('ticket-bulk-vending', TicketBulkVendingController::class)->middleware('auth:sanctum')->only(['store', 'show', 'index']);
    Route::get('ticket-bulk-vending-search', [TicketBulkVendingController::class, 'search'])->middleware('auth:sanctum');
    Route::apiResource('vehicle-manufacturers', VehicleManufacturerController::class)->middleware('auth:sanctum')->only(['index', 'show']);
    Route::apiResource('vehicle-categories', VehicleCategoryController::class)->middleware('auth:sanctum')->only(['index']);
    Route::apiResource('ticket-agents', TicketAgentController::class)->middleware('auth:sanctum')->only(['store', 'show', 'index', 'update']);
    Route::get('ticket-agents-wallet-transactions/{agent_id}', [TicketAgentController::class, 'ticket_agent_transactions'])->middleware('auth:sanctum');
    Route::apiResource('ticket-agent-wallet-transactions', TicketAgentWalletController::class)->middleware('auth:sanctum')->only(['show', 'index']);
    Route::apiResource('ticket-enforcements', TicketEnforcementController::class)->middleware('auth:sanctum');
    Route::get('ticket-enforcements-search', [TicketEnforcementController::class, 'search'])->middleware('auth:sanctum');
    Route::get('ticket-agent-enforcements/{agent_id}', [TicketEnforcementController::class, 'ticket_agent_enforcements'])->middleware('auth:sanctum');
    Route::get('ticket-categories', TicketCategoryController::class);
    Route::post('vehicle-enumeration-verifications', VehicleEnumerationVerificationController::class)->middleware('auth:sanctum');
    Route::get('ticket-agent-categories', TicketAgentCategoryController::class)->middleware('auth:sanctum');
    Route::get('ticket-agent-types', TicketAgentTypeController::class)->middleware('auth:sanctum');
    Route::get('ticket-agent-status', TicketAgentStatusController::class)->middleware('auth:sanctum');
    Route::post('wallet-fund-transfer', WalletFundTransferController::class)->middleware('auth:sanctum');
    Route::get('initiate-liveness', [AWSImageRecognitionController::class, 'initiate_liveness'])->middleware('auth:sanctum');
    Route::post('liveness-results', [AWSImageRecognitionController::class, 'liveness_results'])->middleware('auth:sanctum');
    Route::post('user-identity-confirmation', [UserConfirmationController::class, 'initial_user_identity_confirmation']);
    Route::post('user-identity-token-confirmation', [UserConfirmationController::class, 'user_identity_token_confirmation']);
    /*Monify webhook begins*/
    Route::post('/monify/transaction-completion', [MonifyWebhookController::class, 'transaction_completion']);
    Route::post('/monify/refund-completion', [MonifyWebhookController::class, 'refund_completion']);
    Route::post('/monify/disbursement', [MonifyWebhookController::class, 'disbursement']);
    Route::post('/monify/transaction-completed', [MonifyWebhookController::class, 'settlement']);
    Route::post('/monify/transaction-completed', [MonifyWebhookController::class, 'settlement']);
    //Route::apiResource('users', UserController::class);
});
